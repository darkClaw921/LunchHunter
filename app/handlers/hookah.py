from aiogram import Router, F
from aiogram.types import CallbackQuery
from app.database import Database
from app.keyboards import (
    get_search_results_keyboard, 
    get_start_keyboard, 
    get_full_place_details_keyboard
)
import math

router = Router()

@router.callback_query(F.data == "hookah")
async def callback_hookah(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ö–∞–ª—å—è–Ω—ã'"""
    db = Database()
    
    # –î–ª—è –∫–∞–ª—å—è–Ω–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç—É –∂–µ –ª–æ–≥–∏–∫—É, —á—Ç–æ –∏ –¥–ª—è –±–∏–∑–Ω–µ—Å-–ª–∞–Ω—á–µ–π,
    # –Ω–æ –∏—â–µ–º –∑–∞–≤–µ–¥–µ–Ω–∏—è —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π "–∫–∞–ª—å—è–Ω"
    query = "–∫–∞–ª—å—è–Ω"
    total = await db.count_search_results(query)
    
    if total == 0:
        await callback.message.edit_text(
            "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∑–∞–≤–µ–¥–µ–Ω–∏–π —Å –∫–∞–ª—å—è–Ω–∞–º–∏ –ø–æ–∫–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ.",
            reply_markup=get_start_keyboard()
        )
        await callback.answer()
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    page = 1
    per_page = 1  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ –æ–¥–Ω–æ–º—É –∑–∞–≤–µ–¥–µ–Ω–∏—é –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    total_pages = math.ceil(total / per_page)
    offset = (page - 1) * per_page
    
    places = await db.search_places_by_menu(query, limit=per_page, offset=offset)
    
    if not places:
        await callback.message.edit_text(
            "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö.",
            reply_markup=get_start_keyboard()
        )
        await callback.answer()
        return
    
    place = places[0]
    place_id = place['id']
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–∑–∏—Ü–∏–∏ –º–µ–Ω—é –¥–ª—è –∑–∞–≤–µ–¥–µ–Ω–∏—è, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∫–∞–ª—å—è–Ω–∞–º–∏
    menu_items = await db.get_menu_items_by_place_id(place_id)
    hookah_items = [item for item in menu_items if "–∫–∞–ª—å—è–Ω" in item['category'].lower()]
    
    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–∑—ã–≤—ã
    reviews = await db.get_reviews_by_place_id(place_id)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∑–∞–≤–µ–¥–µ–Ω–∏–∏
    text = f"üí® *–ó–∞–≤–µ–¥–µ–Ω–∏—è —Å –∫–∞–ª—å—è–Ω–∞–º–∏*\n\n"
    text += f"*{place['name']}*\n"
    text += f"üìç *–ê–¥—Ä–µ—Å:* {place['address']}\n\n"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–ª—å—è–Ω—ã –≤ –º–µ–Ω—é
    text += f"*–ö–∞–ª—å—è–Ω—ã –≤ –º–µ–Ω—é:*\n"
    for item in hookah_items[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 3 –ø–æ–∑–∏—Ü–∏–∏
        text += f"‚Ä¢ {item['name']} - {item['price']} —Ä—É–±.\n"
    
    if len(hookah_items) > 3:
        text += f"...–∏ –µ—â–µ {len(hookah_items) - 3} –≤–∏–¥–æ–≤ –∫–∞–ª—å—è–Ω–æ–≤\n"
    
    text += "\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–∑—ã–≤–∞—Ö
    if reviews:
        avg_rating = sum(r['rating'] for r in reviews) / len(reviews)
        text += f"‚≠ê *–†–µ–π—Ç–∏–Ω–≥:* {avg_rating:.1f} ({len(reviews)} –æ—Ç–∑—ã–≤–æ–≤)\n"
    else:
        text += "‚≠ê *–†–µ–π—Ç–∏–Ω–≥:* –ù–µ—Ç –æ—Ç–∑—ã–≤–æ–≤\n"
    
    await callback.message.edit_text(
        text,
        reply_markup=get_full_place_details_keyboard(
            place_id, page, total_pages, f"hookah_page:{query}"
        ),
        parse_mode="Markdown"
    )
    
    await callback.answer()

@router.callback_query(F.data.startswith("hookah_page:"))
async def callback_hookah_page(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –¥–ª—è –∫–∞–ª—å—è–Ω–æ–≤"""
    # –§–æ—Ä–º–∞—Ç: hookah_page:query:page
    parts = callback.data.split(":")
    query = parts[1]
    page = int(parts[2])
    
    db = Database()
    total = await db.count_search_results(query)
    
    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    per_page = 1  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ –æ–¥–Ω–æ–º—É –∑–∞–≤–µ–¥–µ–Ω–∏—é –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    total_pages = math.ceil(total / per_page)
    offset = (page - 1) * per_page
    
    places = await db.search_places_by_menu(query, limit=per_page, offset=offset)
    
    if not places:
        await callback.message.edit_text(
            "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö.",
            reply_markup=get_start_keyboard()
        )
        await callback.answer()
        return
    
    place = places[0]
    place_id = place['id']
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–∑–∏—Ü–∏–∏ –º–µ–Ω—é –¥–ª—è –∑–∞–≤–µ–¥–µ–Ω–∏—è, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∫–∞–ª—å—è–Ω–∞–º–∏
    menu_items = await db.get_menu_items_by_place_id(place_id)
    hookah_items = [item for item in menu_items if "–∫–∞–ª—å—è–Ω" in item['category'].lower()]
    
    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–∑—ã–≤—ã
    reviews = await db.get_reviews_by_place_id(place_id)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∑–∞–≤–µ–¥–µ–Ω–∏–∏
    text = f"üí® *–ó–∞–≤–µ–¥–µ–Ω–∏—è —Å –∫–∞–ª—å—è–Ω–∞–º–∏*\n\n"
    text += f"*{place['name']}*\n"
    text += f"üìç *–ê–¥—Ä–µ—Å:* {place['address']}\n\n"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–ª—å—è–Ω—ã –≤ –º–µ–Ω—é
    text += f"*–ö–∞–ª—å—è–Ω—ã –≤ –º–µ–Ω—é:*\n"
    for item in hookah_items[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 3 –ø–æ–∑–∏—Ü–∏–∏
        text += f"‚Ä¢ {item['name']} - {item['price']} —Ä—É–±.\n"
    
    if len(hookah_items) > 3:
        text += f"...–∏ –µ—â–µ {len(hookah_items) - 3} –≤–∏–¥–æ–≤ –∫–∞–ª—å—è–Ω–æ–≤\n"
    
    text += "\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–∑—ã–≤–∞—Ö
    if reviews:
        avg_rating = sum(r['rating'] for r in reviews) / len(reviews)
        text += f"‚≠ê *–†–µ–π—Ç–∏–Ω–≥:* {avg_rating:.1f} ({len(reviews)} –æ—Ç–∑—ã–≤–æ–≤)\n"
    else:
        text += "‚≠ê *–†–µ–π—Ç–∏–Ω–≥:* –ù–µ—Ç –æ—Ç–∑—ã–≤–æ–≤\n"
    
    await callback.message.edit_text(
        text,
        reply_markup=get_full_place_details_keyboard(
            place_id, page, total_pages, f"hookah_page:{query}"
        ),
        parse_mode="Markdown"
    )
    
    await callback.answer() 